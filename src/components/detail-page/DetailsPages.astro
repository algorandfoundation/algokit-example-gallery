---
import type { Example } from "@/types/example";
import path from "node:path";
import MarkdownContent from "@/components/MarkdownContent.astro";
import CodeContent from "@/components/CodeContent.astro";

type Props = {
  id: Example["id"];
  detailsPages: Example["detailsPages"];
};
const { id, detailsPages } = Astro.props;

// Get the required README content
const readMePath = path.resolve(
  "../../../algokit-templates/examples",
  `${id}/README.md`
);

// Get the optional other details pages
const { smartContract, notebook } = detailsPages ?? {};
let smartContractPath;
if (smartContract) {
  smartContractPath = path.resolve(`algokit-templates/${smartContract}`);
}
let notebookPath;
if (notebook) {
  notebookPath = path.resolve(`algokit-templates/${notebook}`);
}
console.log({notebookPath, notebook})
---

<div class="tabs tabs-border md:tabs-xl">
  <input
    type="radio"
    name="details_pages_tab"
    checked="checked"
    class="tab tab-label"
    aria-label="README"
  />
  <div class="tab-content">
    <MarkdownContent id={id} />
  </div>
  {
    smartContractPath && (
      <>
        <input
          type="radio"
          name="details_pages_tab"
          class="tab tab-label"
          aria-label="Smart Contract"
        />
        <div class="tab-content">
          <CodeContent path={smartContractPath} />
        </div>
      </>
    )
  }
  {
    notebookPath && (
      <>
      <input
          type="radio"
          name="details_pages_tab"
          class="tab tab-label"
          aria-label="Smart Contract"
        />
        <div class="tab-content"/>
      </>
    )
  }
</div>

<style>
  @reference "@/styles/global.css";
  .tab-label {
    @apply font-semibold;
  }
  .tab-content {
    @apply p-3 md:p-6;
  }
</style>
